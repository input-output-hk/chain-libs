name: Continuous integration

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  update_deps:
    name: Update dependencies
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Get top commit hash of cargo registry index
        run: |
          commit=$(git ls-remote --heads https://github.com/rust-lang/crates.io-index.git master | cut -f1)
          echo "$commit"
          echo "::set-env name=CRATES_IO_SHA::$commit"

      - name: Cache cargo registry index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry/index
          key: cargo-registry-index-v1-${{ env.CRATES_IO_SHA }}
          restore-keys: |
            cargo-registry-index-v1-

      - name: Generate Cargo.lock
        run: cargo generate-lockfile

      - name: Cache cargo registry with dependencies
        id: cache-deps
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: cargo-registry-v1-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            cargo-registry-v1-

      # This would come in handy here:
      # https://github.com/matthiaskrgr/cargo-cache/issues/76
      - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
        name: Clear cached dependency crates
        run: |
          rm -r ~/.cargo/registry/cache/*
          rm -r ~/.cargo/registry/src/*

      - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
        name: Fetch dependencies
        run: cargo fetch --locked

      - name: Upload Cargo.lock
        uses: actions/upload-artifact@v2
        with:
          name: lockfile
          path: Cargo.lock

  test:
    name: Test
    needs: update_deps
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:

      - uses: actions/checkout@v2

      - name: Download Cargo.lock
        uses: actions/download-artifact@v2
        with:
          name: lockfile

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Check code formatting
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: fmt
          args: --all -- --check

      - name: Restore cargo registry from cache
        id: cache-deps
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: cargo-registry-v1-${{ hashFiles('Cargo.lock') }}

      - name: Build
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: --frozen --offline

      - name: Run tests
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
          args: --frozen --offline

      - name: Check clippy lints
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: clippy
          # args: -- -D warnings # TODO: uncomment when ready to enforce all warning lints
